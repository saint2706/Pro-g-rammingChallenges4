# Root consolidated dependencies for the entire Pro-g-rammingChallenges4 repository
# Strategy: keep one canonical pin per library aligned with actual imports.
# Optional stacks are marked for forthcoming pyproject extras so base installs stay minimal.

#############################
# Base / cross-project core
#############################
numpy>=1.26,<2.0              # Arrays and math (Algorithmic/, Emulation/, Practical audio tools) – planned extra: core
Pillow>=10.4,<10.5            # Image handling (Algorithmic steganography, Emulation palette helpers) – planned extra: imaging
pandas>=2.2,<2.3              # Data analytics (Practical/IP Tracking dashboard) – planned extra: data
requests>=2.31,<3.0           # HTTP client (Practical/IP Tracking, Algorithmic web scraping) – planned extra: web
Flask>=3.0,<3.1               # Imageboard web app (Practical/Imageboard) – planned extra: web
pypdf>=4.3,<4.4               # PDF metadata editing (Practical/PDF Tagger) – planned extra: documents
mutagen>=1.47,<1.48           # Audio metadata parsing (Practical/ID3 Reader) – planned extra: audio
cryptography>=42.0,<44.0      # AES-GCM vaults (Practical/Password Manager, Encrypted Upload) – planned extra: security

#############################
# Optional extras (install on demand; will move to pyproject extras)
#############################
matplotlib>=3.8,<3.9          # Plotting (Algorithmic visualizations, Games/shuffle) – planned extra: visualization
scipy>=1.11,<1.13             # Signal processing (Practical Shazam clone, WAV Equalizer) – planned extra: audio
pygame>=2.6,<2.7              # Retro demos & Simon audio (Practical/Old School, Games/Simon) – planned extra: games
imageio>=2.34,<2.35           # GIF export (Practical retro demo capture) – planned extra: visualization
opencv-python>=4.10,<5.0      # Seam carving & palette ops (Practical/Seam Carving, Emulation palette) – planned extra: imaging
scikit-learn>=1.5,<1.6        # KMeans palettes (Emulation/5 color scheme) – planned extra: ml
colour-science>=0.4,<0.5      # Advanced color math (Emulation color experiments) – planned extra: visualization
librosa>=0.10,<0.11           # Audio STFT helper (Practical Shazam clone) – planned extra: audio
soundfile>=0.12,<0.13         # Audio file backend (Practical Shazam clone) – planned extra: audio
sounddevice>=0.4,<0.5         # Live audio I/O (Practical WAV Equalizer, Synth performer) – planned extra: audio
plotly>=5.22,<5.23            # Interactive geo plots (Practical IP Tracking) – planned extra: visualization
tqdm>=4.66,<4.67              # CLI progress bars (Practical IP Tracking) – planned extra: cli
vpython>=7.6,<7.7             # 3D spinny cube (Emulation/SpinnyCube) – planned extra: visualization
mido>=1.3,<1.4                # MIDI utilities (Practical synth tools) – planned extra: midi
python-rtmidi>=1.5,<1.6       # RtMidi backend (Practical synth tools) – planned extra: midi
boto3>=1.34,<1.35             # S3 uploads (Practical/Encrypted Upload) – planned extra: cloud
pytest>=8.3,<8.4              # Testing harness (repo wide) – planned extra: dev
ruff>=0.5,<0.6                # Linting (repo tooling) – planned extra: dev
mypy>=1.11,<1.12              # Static type checking (repo tooling) – planned extra: dev

# NOTES:
# 1. For folder-specific work, prefer the scoped requirements files.
# 2. Once pyproject extras land, the "planned extra" labels will map directly to optional dependency groups.
# 3. Start with numpy + Pillow + Flask for the lightest educational install, then layer extras as needed.
